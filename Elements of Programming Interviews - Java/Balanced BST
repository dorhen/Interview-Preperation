import java.lang.*;

public class Pair{
    public Integer val;
    public Boolean balanced;
    public Pair(int val, Boolean b){
        this.val = val;
        this.balanced = b;
    }
}

class BST-HeightBalanaced{
    static boolean balanced(BinaryTreeNode<Integer> root){
        return isBalanced(root).balanced;
    }
    private static Pair isBalanced(BinaryTreeNode<Integer> root){
        if(root == null) return new Pair(-1,true);
        Pair lBalanced = isBalanced(root.left);
        if(!lBalanced.balanced) return lBalanced;
        Pair rBalaned = isBalanced(root.right);
        if(!rBalanced.balanced) return rBalanced;
        int height = Math.max(lBalanced.val, rBalanced.val) + 1;
        Booolean b = Math.abs(lBalanced.val - rBalanced.val) < 2;
        return new Pair(height,b);
    }
}
