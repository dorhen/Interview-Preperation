public static boolean checkDiagonal(int[][] arr, int i, int j){
    while(i >= 0 && j >= 0){
        if(arr[i--][j--] == 1) return false;
    }
    while(i >= 0 && j <= arr.length-1){
        if(arr[i--][j++] == 1) return false;
    }
    return true;
}

public static boolean checkCol(int[][] arr, int i, int j){
    int k = i;
    while(k < arr.length){
        if(arr[k++][j] == 1) return false;
    }
    while(i >= 0){
        if(arr[i--][j] == 1) return false;
    }
    return true;
}

public static ArrayList<int[]> nQueens(int n){
    ArrayList<int[]> placements = new ArrayList<int[]>();
    
    return placements;
}

public static boolean placement(int[][] arr, int i, int j, ArrayList<int[]> all){
    if(i == arr.length){
        all.add(arr.clone());
        return false;
    }
    if(j == arr.length) return false;
    if(i == 0 && j == arr.length) return true;
    if(checkDiagonal(arr,i,j) && checkCol(arr,i,j)){
        arr[i][j] = 1;
        if(!placement(arr,i+1,0)){
            arr[i][j] = 0;
            placement(arr,i,j+1);
        } 
    }
    else{
        placement(arr,i,j+1);
    }
}


